<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2420" status="Tentatively Ready">
<title><tt>function&lt;void(ArgTypes...)&gt;</tt> does not discard the return value of the target object</title>
<section><sref ref="[func.wrap.func]"/></section>
<submitter>Agust&iacute;n Berg&eacute;</submitter>
<date>12 Jul 2014</date>
<priority>1</priority>

<discussion>
<p>
<tt>function&lt;void(ArgTypes...)&gt;</tt> should discard the return value of the target object. This behavior was 
in the original proposal, and it was removed (accidentally?) by the resolution of LWG <iref ref="870"/>.
</p>

<note>2014-10-05 Daniel comments</note>
<p>
This side-effect was indeed not intended by <iref ref="870"/>.
</p>
</discussion>

<resolution>

<ol>
<li><p>Edit <sref ref="[func.wrap.func]"/> paragraph 2:</p>

<blockquote>
<p>
A callable object <tt>f</tt> of type <tt>F</tt> is <i>Callable</i> for argument types <tt>ArgTypes</tt> and return type 
<tt>R</tt> if the expression <tt><i>INVOKE</i>(f, declval&lt;ArgTypes&gt;()...<del>, R</del>)</tt>, considered as an unevaluated 
operand (Clause 5), is well formed (<sref ref="[func.require]"/>)<ins> and, if <tt>R</tt> is not <tt>void</tt>, implicitly 
convertible to <tt>R</tt></ins>.
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
